blueprint:
  name: Niko Hue Smart Switch (4 buttons) via zigbee2mqtt
  description: 'Niko Hue Smart Switch (4 buttons) via zigbee2mqtt, possibly also other Enocean based products'
  domain: automation
  #source_url: TODO
  input:
    remote:
      name: Niko switch
      description: Niko remote
      selector:
        device:
          integration: mqtt
          manufacturer: EnOcean
          model: 'Pushbutton transmitter module (PTM 215Z)'
    button_1_press:
      name: button 1 - press
      description: Action to run when button 1 is pressed
      default: []
      selector:
        action: {}
    button_1_release:
      name: button 1 - release
      description: Action to run when button 1 is released
      default: []
      selector:
        action: {}
    button_2_press:
      name: button 2 - press
      description: Action to run when button 2 is pressed
      default: []
      selector:
        action: {}
    button_2_release:
      name: button 2 - release
      description: Action to run when button 2 is released
      default: []
      selector:
        action: {}
    button_3_press:
      name: button 3 - press
      description: Action to run when button 3 is pressed
      default: []
      selector:
        action: {}
    button_3_release:
      name: button 3 - release
      description: Action to run when button 3 is released
      default: []
      selector:
        action: {}
    button_4_press:
      name: button 4 - press
      description: Action to run when button 4 is pressed
      default: []
      selector:
        action: {}
    button_4_release:
      name: button 4 - release
      description: Action to run when button 4 is released
      default: []
      selector:
        action: {}
    buttons_1_and_3_press:
      name: Both buttons 1 + 3 - press
      description: Action to run when both buttons 1 + 3 are pressed
      default: []
      selector:
        action: {}
    buttons_1_and_3_release:
      name: Both buttons 1 + 3 - release
      description: Action to run when both buttons 1 + 3 are released
      default: []
      selector:
        action: {}
    buttons_2_and_4_press:
      name: Both buttons 2 + 4 - press
      description: Action to run when both buttons 2 + 4 are pressed
      default: []
      selector:
        action: {}
    buttons_2_and_4_release:
      name: Both buttons 2 + 4 - release
      description: Action to run when both buttons 2 + 4 are released
      default: []
      selector:
        action: {}
mode: restart
max_exceeded: silent
trigger:
  - platform: mqtt
    #topic: "{{'zigbee2mqtt/' ~ remote ~ '/action'}}"
    topic: "zigbee2mqtt/niko_switch_1/action"
action:
- variables:
    niko_event: '{{ trigger.payload }}'
- choose:
  - conditions:
    - '{{ niko_event == ''press_1'' }}'
    sequence: !input 'button_1_press'
  - conditions:
    - '{{ niko_event == ''release_1'' }}'
    sequence: !input 'button_1_release'
  - conditions:
    - '{{ niko_event == ''press_2'' }}'
    sequence: !input 'button_2_press'
  - conditions:
    - '{{ niko_event == ''release_2'' }}'
    sequence: !input 'button_2_release'
  - conditions:
    - '{{ niko_event == ''press_3'' }}'
    sequence: !input 'button_3_press'
  - conditions:
    - '{{ niko_event == ''release_3'' }}'
    sequence: !input 'button_3_release'
  - conditions:
    - '{{ niko_event == ''press_4'' }}'
    sequence: !input 'button_4_press'
  - conditions:
    - '{{ niko_event == ''release_4'' }}'
    sequence: !input 'button_4_release'
  - conditions:
    - '{{ niko_event == ''press_1_and_3'' }}'
    sequence: !input 'buttons_1_and_3_press'
  - conditions:
    - '{{ niko_event == ''release_1_and_3'' }}'
    sequence: !input 'buttons_1_and_3_release'
  - conditions:
    - '{{ niko_event == ''press_2_and_4'' }}'
    sequence: !input 'buttons_2_and_4_press'
  - conditions:
    - '{{ niko_event == ''release_2_and_4'' }}'
    sequence: !input 'buttons_2_and_4_release'
